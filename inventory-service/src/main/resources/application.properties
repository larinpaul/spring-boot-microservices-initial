server.port=0
spring.datasource.url=jdbc:mysql://localhost:3306/inventory_service
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=mysql
#spring.jpa.hibernate.ddl-auto=update # this was what he had
# never use =create-drop in a production setup.
# but here it's okay I guess
spring.jpa.hibernate.ddl-auto=create-drop
# you should use =none instead
#spring.jpa.hibernate.ddl-auto=none
#none: Hibernate will not generate or update the database schema. This is the default value.
#create: Hibernate will create the database schema on startup, but will not update it if it already exists.
#create-drop: Hibernate will create the database schema on startup and drop it when the application shuts down. This is useful for testing or development environments where you want to start with a clean slate each time.
#update: Hibernate will update the database schema on startup, adding new tables or columns as needed, but will not delete existing data.
eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka
spring.application.name=inventory-service
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.tracing.sampling.probability=1.0
# Actuator Prometheus Endpoint
management.endpoints.web.exposure.include= prometheus
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
